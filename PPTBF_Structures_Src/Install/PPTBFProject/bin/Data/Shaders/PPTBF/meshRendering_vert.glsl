////////////////////////////////////////////////////////////////////////////////
//
// VERTEX SHADER
//
// Front to back peeling
// - This shader program is used render a mesh
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// VERSION
////////////////////////////////////////////////////////////////////////////////

#version 460

////////////////////////////////////////////////////////////////////////////////
// INPUT
////////////////////////////////////////////////////////////////////////////////

// Model space vertex position (i.e object space)
layout (location = 0) in vec3 iPosition;
layout (location = 1) in vec2 iTextureCoordinate;
//layout (location = 2) in vec3 iNormal;

////////////////////////////////////////////////////////////////////////////////
// UNIFORM
////////////////////////////////////////////////////////////////////////////////

// Model-View-Projection matrix
//uniform mat4 uModelViewProjectionMatrix;
uniform mat4 uViewMatrix;
uniform mat4 uProjectionMatrix;

// Model
uniform mat4 uModelMatrix;

////////////////////////////////////////////////////////////////////////////////
// OUTPUT
////////////////////////////////////////////////////////////////////////////////

out vec2 tc;

////////////////////////////////////////////////////////////////////////////////
// PROGRAM
////////////////////////////////////////////////////////////////////////////////
void main()
{
	tc = iTextureCoordinate;
	
	// Transform model space position to clip space
	//gl_Position = uModelViewProjectionMatrix * vec4( iPosition, 1.0 );
	gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4( iPosition, 1.0 );
}
